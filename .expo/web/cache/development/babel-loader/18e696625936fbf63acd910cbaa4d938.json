{"ast":null,"code":"import * as React from 'react';\nimport NavigationBuilderContext from \"./NavigationBuilderContext\";\nexport default function useFocusedListenersChildrenAdapter(_ref) {\n  var navigation = _ref.navigation,\n    focusedListeners = _ref.focusedListeners;\n  var _React$useContext = React.useContext(NavigationBuilderContext),\n    addListener = _React$useContext.addListener;\n  var listener = React.useCallback(function (callback) {\n    if (navigation.isFocused()) {\n      for (var _listener of focusedListeners) {\n        var _listener2 = _listener(callback),\n          handled = _listener2.handled,\n          result = _listener2.result;\n        if (handled) {\n          return {\n            handled: handled,\n            result: result\n          };\n        }\n      }\n      return {\n        handled: true,\n        result: callback(navigation)\n      };\n    } else {\n      return {\n        handled: false,\n        result: null\n      };\n    }\n  }, [focusedListeners, navigation]);\n  React.useEffect(function () {\n    return addListener === null || addListener === void 0 ? void 0 : addListener('focus', listener);\n  }, [addListener, listener]);\n}","map":{"version":3,"mappings":"AACA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,OAAOC,wBAAwB;AAc/B,eAAe,SAASC,kCAAkC,OAG9C;EAAA,IAFVC,UAAU,GAEFC,KAFRD,UAAU;IACVE,mBACQD,KADRC;EAEA,wBAAwBL,KAAK,CAACM,UAAU,CAACL,wBAAwB,CAAC;IAA1DM;EAER,IAAMC,QAAQ,GAAGR,KAAK,CAACS,WAAW,CAC/BC,kBAAwC,EAAK;IAC5C,IAAIP,UAAU,CAACQ,SAAS,EAAE,EAAE;MAC1B,KAAK,IAAMH,SAAQ,IAAIH,gBAAgB,EAAE;QACvC,iBAA4BG,SAAQ,CAACE,QAAQ,CAAC;UAAtCE,OAAO,cAAPA,OAAO;UAAEC;QAEjB,IAAID,OAAO,EAAE;UACX,OAAO;YAAEA,OAAO,EAAPA,OAAO;YAAEC;UAAO,CAAC;QAC5B;MACF;MAEA,OAAO;QAAED,OAAO,EAAE,IAAI;QAAEC,MAAM,EAAEH,QAAQ,CAACP,UAAU;MAAE,CAAC;IACxD,CAAC,MAAM;MACL,OAAO;QAAES,OAAO,EAAE,KAAK;QAAEC,MAAM,EAAE;MAAK,CAAC;IACzC;EACF,CAAC,EACD,CAACR,gBAAgB,EAAEF,UAAU,CAAC,CAC/B;EAEDH,KAAK,CAACc,SAAS,CACb;IAAA,OAAMP,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAG,OAAO,EAAEC,QAAQ,CAAC;EAAA,GACtC,CAACD,WAAW,EAAEC,QAAQ,CAAC,CACxB;AACH","names":["React","NavigationBuilderContext","useFocusedListenersChildrenAdapter","navigation","_ref","focusedListeners","useContext","addListener","listener","useCallback","callback","isFocused","handled","result","useEffect"],"sourceRoot":"../../src","sources":["useFocusedListenersChildrenAdapter.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}