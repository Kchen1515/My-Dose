{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _excluded = [\"defaultStatus\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { nanoid } from 'nanoid/non-secure';\nimport TabRouter, { TabActions } from \"./TabRouter\";\nexport var DrawerActions = _objectSpread(_objectSpread({}, TabActions), {}, {\n  openDrawer: function openDrawer() {\n    return {\n      type: 'OPEN_DRAWER'\n    };\n  },\n  closeDrawer: function closeDrawer() {\n    return {\n      type: 'CLOSE_DRAWER'\n    };\n  },\n  toggleDrawer: function toggleDrawer() {\n    return {\n      type: 'TOGGLE_DRAWER'\n    };\n  }\n});\nexport default function DrawerRouter(_ref) {\n  var _ref$defaultStatus = _ref.defaultStatus,\n    defaultStatus = _ref$defaultStatus === void 0 ? 'closed' : _ref$defaultStatus,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var router = TabRouter(rest);\n  var isDrawerInHistory = function isDrawerInHistory(state) {\n    var _state$history;\n    return Boolean((_state$history = state.history) === null || _state$history === void 0 ? void 0 : _state$history.some(function (it) {\n      return it.type === 'drawer';\n    }));\n  };\n  var addDrawerToHistory = function addDrawerToHistory(state) {\n    if (isDrawerInHistory(state)) {\n      return state;\n    }\n    return _objectSpread(_objectSpread({}, state), {}, {\n      history: [].concat(_toConsumableArray(state.history), [{\n        type: 'drawer',\n        status: defaultStatus === 'open' ? 'closed' : 'open'\n      }])\n    });\n  };\n  var removeDrawerFromHistory = function removeDrawerFromHistory(state) {\n    if (!isDrawerInHistory(state)) {\n      return state;\n    }\n    return _objectSpread(_objectSpread({}, state), {}, {\n      history: state.history.filter(function (it) {\n        return it.type !== 'drawer';\n      })\n    });\n  };\n  var openDrawer = function openDrawer(state) {\n    if (defaultStatus === 'open') {\n      return removeDrawerFromHistory(state);\n    }\n    return addDrawerToHistory(state);\n  };\n  var closeDrawer = function closeDrawer(state) {\n    if (defaultStatus === 'open') {\n      return addDrawerToHistory(state);\n    }\n    return removeDrawerFromHistory(state);\n  };\n  return _objectSpread(_objectSpread({}, router), {}, {\n    type: 'drawer',\n    getInitialState: function getInitialState(_ref2) {\n      var routeNames = _ref2.routeNames,\n        routeParamList = _ref2.routeParamList,\n        routeGetIdList = _ref2.routeGetIdList;\n      var state = router.getInitialState({\n        routeNames: routeNames,\n        routeParamList: routeParamList,\n        routeGetIdList: routeGetIdList\n      });\n      return _objectSpread(_objectSpread({}, state), {}, {\n        default: defaultStatus,\n        stale: false,\n        type: 'drawer',\n        key: \"drawer-\" + nanoid()\n      });\n    },\n    getRehydratedState: function getRehydratedState(partialState, _ref3) {\n      var routeNames = _ref3.routeNames,\n        routeParamList = _ref3.routeParamList,\n        routeGetIdList = _ref3.routeGetIdList;\n      if (partialState.stale === false) {\n        return partialState;\n      }\n      var state = router.getRehydratedState(partialState, {\n        routeNames: routeNames,\n        routeParamList: routeParamList,\n        routeGetIdList: routeGetIdList\n      });\n      if (isDrawerInHistory(partialState)) {\n        state = removeDrawerFromHistory(state);\n        state = addDrawerToHistory(state);\n      }\n      return _objectSpread(_objectSpread({}, state), {}, {\n        default: defaultStatus,\n        type: 'drawer',\n        key: \"drawer-\" + nanoid()\n      });\n    },\n    getStateForRouteFocus: function getStateForRouteFocus(state, key) {\n      var result = router.getStateForRouteFocus(state, key);\n      return closeDrawer(result);\n    },\n    getStateForAction: function getStateForAction(state, action, options) {\n      switch (action.type) {\n        case 'OPEN_DRAWER':\n          return openDrawer(state);\n        case 'CLOSE_DRAWER':\n          return closeDrawer(state);\n        case 'TOGGLE_DRAWER':\n          if (isDrawerInHistory(state)) {\n            return removeDrawerFromHistory(state);\n          }\n          return addDrawerToHistory(state);\n        case 'JUMP_TO':\n        case 'NAVIGATE':\n          {\n            var result = router.getStateForAction(state, action, options);\n            if (result != null && result.index !== state.index) {\n              return closeDrawer(result);\n            }\n            return result;\n          }\n        case 'GO_BACK':\n          if (isDrawerInHistory(state)) {\n            return removeDrawerFromHistory(state);\n          }\n          return router.getStateForAction(state, action, options);\n        default:\n          return router.getStateForAction(state, action, options);\n      }\n    },\n    actionCreators: DrawerActions\n  });\n}","map":{"version":3,"mappings":"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","names":["nanoid","TabRouter","TabActions","DrawerActions","openDrawer","type","closeDrawer","toggleDrawer","DrawerRouter","_ref","defaultStatus","rest","router","isDrawerInHistory","state","Boolean","history","_state$history","some","it","addDrawerToHistory","status","removeDrawerFromHistory","filter","getInitialState","routeNames","_ref2","routeParamList","routeGetIdList","default","stale","key","getRehydratedState","partialState","_ref3","getStateForRouteFocus","result","getStateForAction","action","options","index","actionCreators"],"sourceRoot":"../../src","sources":["DrawerRouter.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}