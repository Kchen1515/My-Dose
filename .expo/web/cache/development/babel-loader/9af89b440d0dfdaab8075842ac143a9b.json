{"ast":null,"code":"import { getPathFromState, NavigationContainerRefContext, NavigationHelpersContext } from '@react-navigation/core';\nimport * as React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport LinkingContext from \"./LinkingContext\";\nimport useLinkTo from \"./useLinkTo\";\nvar getStateFromParams = function getStateFromParams(params) {\n  if (params !== null && params !== void 0 && params.state) {\n    return params.state;\n  }\n  if (params !== null && params !== void 0 && params.screen) {\n    return {\n      routes: [{\n        name: params.screen,\n        params: params.params,\n        state: params.screen ? getStateFromParams(params.params) : undefined\n      }]\n    };\n  }\n  return undefined;\n};\nexport default function useLinkProps(_ref) {\n  var _ref2;\n  var to = _ref.to,\n    action = _ref.action;\n  var root = React.useContext(NavigationContainerRefContext);\n  var navigation = React.useContext(NavigationHelpersContext);\n  var _React$useContext = React.useContext(LinkingContext),\n    options = _React$useContext.options;\n  var linkTo = useLinkTo();\n  var onPress = function onPress(e) {\n    var _e$currentTarget;\n    var shouldHandle = false;\n    if (Platform.OS !== 'web' || !e) {\n      shouldHandle = e ? !e.defaultPrevented : true;\n    } else if (!e.defaultPrevented && !(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) && (e.button == null || e.button === 0) && [undefined, null, '', 'self'].includes((_e$currentTarget = e.currentTarget) === null || _e$currentTarget === void 0 ? void 0 : _e$currentTarget.target)) {\n      e.preventDefault();\n      shouldHandle = true;\n    }\n    if (shouldHandle) {\n      if (action) {\n        if (navigation) {\n          navigation.dispatch(action);\n        } else if (root) {\n          root.dispatch(action);\n        } else {\n          throw new Error(\"Couldn't find a navigation object. Is your component inside NavigationContainer?\");\n        }\n      } else {\n        linkTo(to);\n      }\n    }\n  };\n  var getPathFromStateHelper = (_ref2 = options === null || options === void 0 ? void 0 : options.getPathFromState) != null ? _ref2 : getPathFromState;\n  var href = typeof to === 'string' ? to : getPathFromStateHelper({\n    routes: [{\n      name: to.screen,\n      params: to.params,\n      state: getStateFromParams(to.params)\n    }]\n  }, options === null || options === void 0 ? void 0 : options.config);\n  return {\n    href: href,\n    accessibilityRole: 'link',\n    onPress: onPress\n  };\n}","map":{"version":3,"mappings":"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","names":["getPathFromState","NavigationContainerRefContext","NavigationHelpersContext","React","LinkingContext","useLinkTo","getStateFromParams","params","state","screen","routes","name","undefined","useLinkProps","to","_ref","action","root","useContext","navigation","options","linkTo","onPress","e","shouldHandle","Platform","OS","defaultPrevented","metaKey","altKey","ctrlKey","shiftKey","button","includes","currentTarget","_e$currentTarget","target","preventDefault","dispatch","Error","getPathFromStateHelper","href","config","accessibilityRole"],"sourceRoot":"../../src","sources":["useLinkProps.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}